<SyntaxDefinition name="Cpp" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">

  <Color name="CommentSingle" foreground="#0cad31" />
  <Color name="CommentMulti" foreground="#068724" />
  <Color name="String" foreground="Orange" />
  <Color name="Digits" foreground="DarkBlue"/>

  <RuleSet>
    <Span color="CommentSingle" begin="//" />
    <Span color="CommentMulti" multiline="true"
          begin="/\*" end="\*/" />

    <Span color="String">
      <Begin>"</Begin>
      <End>"</End>
      <RuleSet>
        <!-- nested span for escape sequences -->
        <Span begin="\\" end="." />
      </RuleSet>
    </Span>

    <Keywords fontWeight="bold" foreground="LightBlue">
      <Word>Asm</Word>
      <Word>auto</Word>
      <Word>bool</Word>
      <Word>break</Word>
      <Word>case</Word>
      <Word>catch</Word>
      <Word>char</Word>
      <Word>class</Word>
      <Word>const_cast</Word>
      <Word>continue</Word>
      <Word>default</Word>
      <Word>delete</Word>
      <Word>do</Word>
      <Word>double</Word>
      <Word>else</Word>
      <Word>enum</Word>
      <Word>dynamic_cast</Word>
      <Word>extern</Word>
      <Word>false</Word>
      <Word>float</Word>
      <Word>for</Word>
      <Word>union</Word>
      <Word>unsigned</Word>
      <Word>using</Word>
      <Word>friend</Word>
      <Word>goto</Word>
      <Word>if</Word>
      <Word>inline</Word>
      <Word>int</Word>
      <Word>long</Word>
      <Word>mutable</Word>
      <Word>virtual</Word>
      <Word>namespace</Word>
      <Word>new</Word>
      <Word>operator</Word>
      <Word>private</Word>
      <Word>protected</Word>
      <Word>public</Word>
      <Word>register</Word>
      <Word>void</Word>
      <Word>reinterpret_cast</Word>
      <Word>return</Word>
      <Word>short</Word>
      <Word>signed</Word>
      <Word>sizeof</Word>
      <Word>static</Word>
      <Word>static_cast</Word>
      <Word>volatile</Word>
      <Word>struct</Word>
      <Word>switch</Word>
      <Word>template</Word>
      <Word>this</Word>
      <Word>throw</Word>
      <Word>true</Word>
      <Word>try</Word>
      <Word>typedef</Word>
      <Word>typeid</Word>
      <Word>unsigned</Word>
      <Word>wchar_t</Word>
      <Word>while</Word>
      <Word>?</Word>
      <Word>,</Word>
      <Word>.</Word>
      <Word>;</Word>
      <Word>:</Word>
      <Word>)</Word>
      <Word>(</Word>
      <Word>[</Word>
      <Word>]</Word>
      <Word>{</Word>
      <Word>}</Word>
      <Word>+</Word>
      <Word>-</Word>
      <Word>/</Word>
      <Word>%</Word>
      <Word>*</Word>
      <Word>&lt;</Word>
      <Word>&gt;</Word>
      <Word>^</Word>
      <Word>=</Word>
      <Word>~</Word>
      <Word>!</Word>
      <Word>|</Word>
      <Word>&amp;</Word>
      
      <Word>cin</Word>
      <Word>endl</Word>
      <Word>main</Word>
      <Word>std</Word>
      <Word>cout</Word>
      <Word>include</Word>
      <Word>iostread</Word>
      <Word>NULL</Word>
      <Word>null</Word>
      <Word>string</Word>
    </Keywords>

    <!-- Digits -->
    <Rule foreground="#ecffc4">
      \b0[xX][0-9a-fA-F]+  # hex number
      |    \b
      (    \d+(\.[0-9]+)?   #number with optional floating point
      |    \.[0-9]+         #or just starting with floating point
      )
      ([eE][+-]?[0-9]+)? # optional exponent
    </Rule>
    
    <!-- Types -->
    <Rule foreground="#408E66">
      (^|\s)[A-Z][a-zA-Z]*[0-9]*
    </Rule>
  </RuleSet>
</SyntaxDefinition>